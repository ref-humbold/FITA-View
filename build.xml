<?xml version="1.0" encoding="UTF-8"?>
<project name="FITA-View" basedir="." default="all">
  <property name="vendor" value="RafaÅ‚ Kaleta" />
  <property name="version" value="1.0" />
  <property name="src.dir" value="src" />
  <property name="test.dir" value="test" />
  <property name="build.dir" value="bin" />
  <property name="junit.output.dir" value="junit_results" />
  <property name="junit.report.dir" value="junit_reports" />
  <property name="javadoc.output.dir" value="docs" />
  <property name="debuglevel" value="source,lines,vars" />
  <property name="target" value="1.8" />
  <property name="source" value="1.8" />

  <path id="JUnit4.libraryclasspath">
    <!--=pathelement location="/usr/share/java/hamcrest-core.jar" /-->
    <pathelement location="/usr/share/java/hamcrest-core-1.3.jar" />
    <!--pathelement location="/usr/share/java/junit4.jar" /-->
    <pathelement location="/usr/share/java/junit4-4.12.jar" />
  </path>
  <path id="Mockito_PowerMock.libraryclasspath">
    <pathelement location="/usr/share/java/cglib-nodep-2.2.2.jar" />
    <pathelement location="/usr/share/java/javassist-3.21.0-GA.jar" />
    <!--pathelement location="/usr/share/java/mockito-core.jar" /-->
    <pathelement location="/usr/share/java/mockito-core-1.10.19.jar" />
    <pathelement location="/usr/share/java/objenesis-2.4.jar" />
    <pathelement location="/usr/share/java/powermock-mockito-1.7.1-full.jar" />
  </path>
  <path id="FITA-View.classpath">
    <pathelement location="${build.dir}" />
  </path>
  <path id="FITA-View_test.classpath">
    <path refid="JUnit4.libraryclasspath" />
    <path refid="Mockito_PowerMock.libraryclasspath" />
    <path refid="FITA-View.classpath" />
  </path>

  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <target name="init">
    <mkdir dir="${build.dir}" />
    <copy includeemptydirs="false" todir="${build.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java" />
    </copy>
  </target>

  <target name="build" depends="init">
    <javac source="${source}" target="${target}" debug="true" debuglevel="${debuglevel}"
           destdir="${build.dir}" includeantruntime="false">
      <src path="${src.dir}" />
      <src path="${test.dir}" />
      <compilerarg line="-Xlint" />
      <classpath refid="FITA-View_test.classpath" />
    </javac>
  </target>

  <target name="jar" depends="build">
    <buildnumber />
    <jar destfile="fita_view.jar" basedir="${build.dir}" excludes="**/*Test.class">
      <manifest>
        <attribute name="Built-By" value="${vendor}" />
        <attribute name="Main-Class" value="ref_humbold.fita_view.FITAView" />
        <attribute name="Specification-Title" value="Finite and Infinite Tree Automata Viewer" />
        <attribute name="Specification-Version" value="${version}" />
        <attribute name="Specification-Vendor" value="${vendor}" />
        <attribute name="Implementation-Title" value="ref_humbold.fita_view" />
        <attribute name="Implementation-Verion" value="${version}-build${build.number}" />
        <attribute name="Implementation-Vendor" value="${vendor}" />
      </manifest>
    </jar>
  </target>

  <target name="test">
    <delete dir="${junit.output.dir}" />
    <mkdir dir="${junit.output.dir}" />
    <junit fork="yes" printsummary="withOutAndErr">
      <formatter type="xml" />
      <batchtest todir="${junit.output.dir}">
        <fileset dir="${test.dir}" includes="**/*Test.java" />
      </batchtest>
      <classpath refid="FITA-View_test.classpath" />
    </junit>
    <delete dir="${junit.report.dir}" />
    <mkdir dir="${junit.report.dir}" />
    <junitreport todir="${junit.report.dir}">
      <fileset dir="${junit.output.dir}" includes="TEST-*.xml" />
      <report format="frames" todir="${junit.report.dir}" />
    </junitreport>
  </target>

  <target name="javadocs">
    <delete dir="${javadoc.output.dir}" />
    <mkdir dir="${javadoc.output.dir}" />
    <javadoc sourcepath="${src.dir}" destdir="${javadoc.output.dir}" access="public">
      <package name="ref_humbold.fita_view.*" />
    </javadoc>
  </target>

  <target name="release" depends="clean, build, jar" />

  <target name="all" depends="clean, build, test, jar, javadocs" />
</project>
